name: Go

on:
  pull_request:
    branches:
    - master

jobs:
  build:
    name: Test on Go ${{ matrix.go-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Set up Go ${{ matrix.go-version }} on ${{ matrix.os }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Build on ${{ matrix.os }}
        if: matrix.os == 'windows-latest'
        env:
          GO111MODULE: on
        run: |
          go build --ldflags="-s -w" -o %GOPATH%\bin\mc.exe
          go test -v -race --timeout 30m ./...
      - name: Build on ${{ matrix.os }}
        if: matrix.os == 'ubuntu-latest'
        env:
          GO111MODULE: on
        run: |
          wget https://dl.min.io/server/minio/release/linux-amd64/minio && chmod +x minio
          mkdir -p ~/.minio/certs/ && cp testdata/localhost.crt ~/.minio/certs/public.crt && cp testdata/localhost.key ~/.minio/certs/private.key
          sudo cp testdata/localhost.crt /usr/local/share/ca-certificates/ && sudo update-ca-certificates
          ./minio server /tmp/test-xl/{1...4}/ & sleep 10
          export SERVER_ENDPOINT=localhost:9000 ACCESS_KEY=minioadmin SECRET_KEY=minioadmin ENABLE_HTTPS=1
          make
          diff -au <(gofmt -d *.go) <(printf "")
          diff -au <(gofmt -s -d cmd) <(printf "")
          diff -au <(gofmt -s -d pkg) <(printf "")
          make test-race
          make verify
          make crosscompile
